{"version":3,"sources":["../node_modules/node-fetch/browser.js","pec3/pec2.js","pec3/pec3.js","index.js"],"names":["getGlobal","self","window","global","Error","module","exports","fetch","default","bind","Headers","Request","Response","getMovieCount","then","res","json","count","listMovies","results","movies","map","movie","name","title","director","release","release_date","episodeID","episode_id","listMoviesSorted","sort","compareByName","listEvenMoviesSorted","filter","_compareByEpisodeId","getMovieInfo","id","characters","getCharacterName","url","replace","character","getMovieCharacters","_getCharacterNames","getMovieCharactersAndHomeworlds","_getCharacterNamesAndHomeWorlds","Promise","all","charactersWithHomeWorlds","_getCharacterNameAndHomeworld","raw","birth_year","eye_color","gender","homeworld","_getHomeWorldName","planet","a","b","parseFloat","createMovie","Movie","constructor","characterUrls","getCharacters","getHomeworlds","namesAndHomeworlds","homeworlds","item","uniqueHomeWorldsSet","Set","uniqueHomeworldArray","Array","from","getHomeworldsReverse","reverse","deleteChildrenNodes","selector","hasChildNodes","removeChild","lastChild","deleteCharacterSheets","document","querySelector","mapMovieId","mapdict","genBaseCaseSelector","value","text","selected","option","createElement","appendChild","textContent","setFunctionToApply","propertyName","length","functionToApply","genSelectorValues","valuesObject","noSelectionText","valueProperty","textProperty","valueFunction","textFunction","_value","cloneNode","genCharacterTemplate","charName","charBirth","charEye","charSex","charHomeworld","li","className","innerHTML","genHeader","titleSelector","infoSelector","directorSelector","titleText","infoText","directorText","info","getSelectedValueInSelector","e","getElementById","selectedIDValue","options","selectedIndex","setMovieHeading","movieId","movieInfo","initMovieSelect","setMovieSelectCallbacks","selectorID","selectorHomeworld","addEventListener","homeworldInfo","v","i","indexOf","addChangeEventToSelectHomeworld","char","console","log","pec3"],"mappings":"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","file":"src.768ecc15.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import fetch from 'node-fetch';\n\nexport function getMovieCount() {\n  return fetch('https://swapi.dev/api/films/')\n    .then((res) => res.json())\n    .then((res) => res.count);\n}\n\nexport function listMovies() {\n  return fetch('https://swapi.dev/api/films/')\n    .then((res) => res.json())\n    .then((res) => res.results)\n    .then((movies) =>\n      movies.map((movie) => ({\n        name: movie.title,\n        director: movie.director,\n        release: movie.release_date,\n        episodeID: movie.episode_id,\n      }))\n    );\n}\n\nexport async function listMoviesSorted() {\n  const movies = await listMovies();\n  return movies.sort(compareByName);\n}\n\nexport async function listEvenMoviesSorted() {\n  const movies = await listMovies();\n  return movies.filter((movie) => movie.episodeID % 2 === 0).sort(_compareByEpisodeId);\n}\n\nexport function getMovieInfo(id) {\n  return fetch(`https://swapi.dev/api/films/${id}/`)\n    .then((res) => res.json())\n    .then((movie) => ({\n      name: movie.title,\n      characters: movie.characters,\n      director: movie.director,\n      release: movie.release_date,\n      episodeID: movie.episode_id,\n    }));\n}\n\nexport function getCharacterName(url) {\n  // Necesario para siguientes apartados.\n  url = url.replace('http://', 'https://');\n  return fetch(url)\n    .then((res) => res.json())\n    .then((character) => character.name);\n}\n\nexport async function getMovieCharacters(id) {\n  const movie = await getMovieInfo(id);\n  movie.characters = await _getCharacterNames(movie);\n  return movie;\n}\n\nexport async function getMovieCharactersAndHomeworlds(id) {\n  const movie = await getMovieInfo(id);\n  movie.characters = await _getCharacterNamesAndHomeWorlds(movie);\n  return movie;\n}\n\nasync function _getCharacterNames(movie) {\n  const characters = await Promise.all(movie.characters.map(getCharacterName));\n  return characters;\n}\n\nasync function _getCharacterNamesAndHomeWorlds(movie) {\n  const charactersWithHomeWorlds = await Promise.all(\n    movie.characters.map(_getCharacterNameAndHomeworld)\n  );\n  return charactersWithHomeWorlds;\n}\n\nasync function _getCharacterNameAndHomeworld(url) {\n  url = url.replace('http://', 'https://');\n  const raw = await fetch(url);\n  const res = await raw.json();\n  const character = {\n    name: res.name,\n    birth_year: res.birth_year,\n    eye_color: res.eye_color,\n    gender: res.gender,\n    homeworld: res.homeworld,\n  };\n\n  character.homeworld = await _getHomeWorldName(character.homeworld);\n\n  return character;\n}\n\nasync function _getHomeWorldName(url) {\n  // Necesario para siguientes apartados.\n  url = url.replace('http://', 'https://');\n  return fetch(url)\n    .then((res) => res.json())\n    .then((planet) => planet.name);\n}\n\nfunction compareByName(a, b) {\n  if (a.name < b.name) {\n    return -1;\n  }\n  if (a.name > b.name) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction _compareByEpisodeId(a, b) {\n  return parseFloat(a.episodeID) - parseFloat(b.episodeID);\n}\n\nasync function createMovie(id) {\n  const movie = await getMovieInfo(id);\n  return new Movie(movie.name, movie.characters);\n}\n\nexport class Movie {\n  constructor(name, characterUrls) {\n    this.name = name;\n    this.characterUrls = characterUrls;\n  }\n\n  async getCharacters() {\n    return Promise.all(this.characterUrls.map(getCharacterName));\n  }\n\n  async getHomeworlds() {\n    const namesAndHomeworlds = await Promise.all(\n      this.characterUrls.map(_getCharacterNameAndHomeworld)\n    );\n    const homeworlds = namesAndHomeworlds.map((item) => item.homeworld);\n    const uniqueHomeWorldsSet = new Set(homeworlds);\n    const uniqueHomeworldArray = Array.from(uniqueHomeWorldsSet);\n    return uniqueHomeworldArray;\n  }\n\n  async getHomeworldsReverse() {\n    const homeworlds = await this.getHomeworlds();\n    return homeworlds.sort().reverse();\n  }\n}\n\nexport default {\n  getMovieCount,\n  listMovies,\n  listMoviesSorted,\n  listEvenMoviesSorted,\n  getMovieInfo,\n  getCharacterName,\n  getMovieCharacters,\n  getMovieCharactersAndHomeworlds,\n  createMovie,\n  compareByName,\n};\n","import {\n  getMovieInfo,\n  listMoviesSorted,\n  getMovieCharactersAndHomeworlds,\n  compareByName,\n} from './pec2';\n\nfunction deleteChildrenNodes(selector) {\n  while (selector.hasChildNodes()) {\n    selector.removeChild(selector.lastChild);\n  }\n}\n\nfunction deleteCharacterSheets() {\n  deleteChildrenNodes(document.querySelector('ul.list__characters'));\n}\n\nfunction mapMovieId(id) {\n  const mapdict = { 1: 4, 2: 5, 3: 6, 4: 1, 5: 2, 6: 3 };\n  return mapdict[id];\n}\n\nfunction genBaseCaseSelector(selector, value, text, selected) {\n  var option = document.createElement('option');\n  selector.appendChild(option);\n  option.value = value;\n  option.textContent = text;\n  option.selected = selected;\n}\n\nfunction setFunctionToApply(propertyName) {\n  if (typeof propertyName === 'string' && propertyName.length > 0) {\n    var functionToApply = function (a) {\n      return a[propertyName];\n    };\n  } else {\n    functionToApply = function (a) {\n      return a;\n    };\n  }\n  return functionToApply;\n}\n\nfunction genSelectorValues(selector, valuesObject, noSelectionText, valueProperty, textProperty) {\n  var option = document.createElement('option');\n  genBaseCaseSelector(selector, '', noSelectionText, true);\n\n  var valueFunction = setFunctionToApply(valueProperty);\n  var textFunction = setFunctionToApply(textProperty);\n\n  for (const _value in valuesObject) {\n    option.value = valueFunction(valuesObject[_value]);\n    option.textContent = textFunction(valuesObject[_value]);\n    selector.appendChild(option.cloneNode(true));\n  }\n}\n\nfunction genCharacterTemplate(charName, charBirth, charEye, charSex, charHomeworld) {\n  const li = document.createElement('li');\n\n  li.className = 'list__item item character';\n  li.innerHTML = `<img src=\"/user.d1344702.svg\" class=\"character__image\">\n    <h2 class=\"character__name\">${charName}</h2>\n    <div class=\"character__birth\"><strong>Birth Year:</strong> ${charBirth}</div>\n    <div class=\"character__eye\"><strong>Eye color:</strong> ${charEye}</div>\n    <div class=\"character__gender\"><strong>Gender:</strong> ${charSex}</div>\n    <div class=\"character__home\"><strong>Home World:</strong> ${charHomeworld}</div>`;\n  document.querySelector('ul.list__characters').appendChild(li);\n}\n\nfunction genHeader(\n  titleSelector,\n  infoSelector,\n  directorSelector,\n  titleText,\n  infoText,\n  directorText\n) {\n  const title = document.querySelector(titleSelector);\n  const info = document.querySelector(infoSelector);\n  const director = document.querySelector(directorSelector);\n  title.innerHTML = titleText;\n  info.innerHTML = infoText;\n  director.innerHTML = directorText;\n}\n\nfunction getSelectedValueInSelector(selector) {\n  let e = document.getElementById(selector);\n  let selectedIDValue = e.options[e.selectedIndex].value;\n  return selectedIDValue;\n}\n\n// Ejercicio 1\nexport async function setMovieHeading(movieId, titleSelector, infoSelector, directorSelector) {\n  let movieInfo = await getMovieInfo(movieId);\n\n  genHeader(\n    titleSelector,\n    infoSelector,\n    directorSelector,\n    movieInfo.name,\n    `Episode ${movieInfo.episodeID} - ${movieInfo.release}`,\n    `Director: ${movieInfo.director}`\n  );\n\n  return movieInfo;\n}\n\n// Ejercicio 2\nexport async function initMovieSelect(selector) {\n  const selectorID = document.querySelector(selector);\n  let movieInfo = await listMoviesSorted();\n  genSelectorValues(selectorID, movieInfo, 'Select a movie', 'episodeID', 'name');\n}\n\n// Ejercicio 3 y 4\nexport async function setMovieSelectCallbacks() {\n  const selectorID = document.getElementById('select-movie');\n  const selectorHomeworld = document.getElementById('select-homeworld');\n  genHeader('.movie__title', '.movie__info', '.movie__director', '', '', '');\n  genBaseCaseSelector(selectorHomeworld, '', 'Select a homeworld', true);\n\n  selectorID.addEventListener(\n    'change',\n    async function () {\n      if (this.value === '') {\n        genHeader('.movie__title', '.movie__info', '.movie__director', '', '', '');\n        deleteChildrenNodes(selectorHomeworld);\n        genBaseCaseSelector(selectorHomeworld, '', 'Select a homeworld', true);\n        deleteCharacterSheets();\n      } else {\n        await setMovieHeading(\n          mapMovieId(this.value),\n          '.movie__title',\n          '.movie__info',\n          '.movie__director'\n        );\n\n        let homeworldInfo = await getMovieCharactersAndHomeworlds(mapMovieId(this.value));\n        let homeworlds = homeworldInfo.characters\n          .map((item) => item.homeworld)\n          .filter((v, i, a) => a.indexOf(v) === i)\n          .sort(compareByName);\n        deleteChildrenNodes(selectorHomeworld);\n        genSelectorValues(selectorHomeworld, homeworlds, 'Select a homeworld');\n        deleteCharacterSheets();\n      }\n    },\n    false\n  );\n}\n\n// Ejercicio 5\nexport async function addChangeEventToSelectHomeworld() {\n  const selectorHomeworld = document.getElementById('select-homeworld');\n  deleteCharacterSheets();\n\n  selectorHomeworld.addEventListener(\n    'change',\n    async function () {\n      deleteCharacterSheets();\n      let selectedIDValue = getSelectedValueInSelector('select-movie');\n      let homeworldInfo = await getMovieCharactersAndHomeworlds(mapMovieId(selectedIDValue));\n      let chars = homeworldInfo.characters.filter((char) => char.homeworld === this.value);\n\n      chars.map((char) =>\n        genCharacterTemplate(\n          char.name,\n          char.birth_year,\n          char.eye_color,\n          char.gender,\n          char.homeworld\n        )\n      );\n    },\n    false\n  );\n}\n","import * as pec3 from './pec3/pec3';\n\nconsole.log('Bienvenido a JS para programadores');\n\n//Ejercicio 1\n//pec3.setMovieHeading(1, '.movie__title', '.movie__info', '.movie__director');\n\n//Ejercicio 2\npec3.initMovieSelect('#select-movie');\n\n//Ejercicio 3 y 4\npec3.setMovieSelectCallbacks();\n\n//Ejercicio 5\npec3.addChangeEventToSelectHomeworld();\n"]}